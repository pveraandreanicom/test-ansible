---
- hosts: "{{ new_vmname }}"
  gather_facts: yes
  vars:
    rhsm_add_repo: 
      - rhel-8-for-x86_64-baseos-rpms
      - rhel-8-for-x86_64-appstream-rpms
      - rhv-4.4-manager-for-rhel-8-x86_64-rpms
      - fast-datapath-for-rhel-8-x86_64-rpms
      - jb-eap-7.4-for-rhel-8-x86_64-rpms
      - openstack-16.2-cinderlib-for-rhel-8-x86_64-rpms
      - rhceph-4-tools-for-rhel-8-x86_64-rpms

    rhvm_add_rpms:
      - postgresql-contrib
      - rhvm 
      - ovirt-engine-extension-aaa-ldap-setup
 
    rhvm_dom_gui: "{{ rhvm_dominio | default('domain.com'}}"
    rhvm_adm_pass: "{{ rhvm_admin_password | default('admin') }}"
    rhsm_usr_name: "{{ rhsm_user | default('rhsm_user')}}"
    rhsm_usr_pass: "{{ rhsm_pass | default('rhsm_pass')}}"
    rhsm_reg_pool: "{{ rhsm_pool | default('notsetwillfail') }} "

  tasks:

    - name: Copiar config
      copy: src=rhvm_config.conf dest=/tmp mode=0555

    - name: Reemplazar por el hostname
      replace:
        dest: /tmp/rhvm_config.conf
        regexp: HNAME
        replace: '{{ ansible_hostname }}.{{ rhvm_dom_gui}}'
        backup: yes

    - name: Aplicar el dominio 
      replace:
        dest: /tmp/rhvm_config.conf
        regexp: DOMINIO 
        replace: '{{ rhvm_dom_gui }}'
        backup: yes

    - name: Configurar admin password
      replace:
        dest: /tmp/rhvm_config.conf
        regexp: RHVMPASSWORD
        replace: '{{ rhvm_adm_pass }}'
        backup: yes

    - name: Agregar a la tabla de host
      lineinfile:
         path: /etc/hosts
         line: " {{ ansible_ssh_host }} {{ ansible_hostname }}.{{ rhvm_dom_gui }} "
         insertbefore: EOF

    - name: "Inicializar el estado de registracion..."
      set_fact:
        registered: false
    
    - name: "Checking subscription status (a failure means it is not registered and will be)"
      command: "/usr/bin/subscription-manager status"
      ignore_errors: yes
      changed_when: no
      register: check_if_registered

    - name: "Set registration fact if system is already registered"
      set_fact:
        registered: true
      when: check_if_registered.rc == 0

    - name: "Cleaning any old subscriptions"
      command: "/usr/bin/subscription-manager clean"
      when:
        - not registered
        - rhsm_authentication is defined
      register: cleaningsubs_result
      until: cleaningsubs_result.rc == 0
      retries: 10
      delay: 1
     
    - name: Register RHEL
      redhat_subscription:      
        state: present
        username: "{{ rhsm_usr_name }}"
        password: "{{ rhsm_usr_pass }}"
        pool_ids: "{{ rhsm_reg_pool }}"
        force_register: yes

    - name: "Auto-attach to Subscription Manager Pool"
      command: "/usr/bin/subscription-manager attach --auto"
      when:
        - not registered
        - rhsm_reg_pool is undefined or rhsm_reg_pool is none or rhsm__reg_pool|trim == ''
      register: autoattach_result
      until: autoattach_result.rc == 0
      retries: 10
      delay: 1
    
    - name: "Deshabilitar todos los repos"
      command: "/usr/bin/subscription-manager repos --disable=*"
      when:
        - rhsm_add_repo is defined
        - rhsm_add_repo is not none
        - rhsm_add_repo|trim != ''

    - name: "Habilitar los repos especificos"
      command: "/usr/bin/subscription-manager repos --enable={{ item }}"
      with_items: "{{ rhsm_add_repo }}"
      when:
        - rhsm_add_repo is defined
        - rhsm_add_repo is not none
        - rhsm_add_repo|trim != ''
      register: enablerepos_result
      until: enablerepos_result.rc == 0
      retries: 10
      delay: 1
  
  ## Handler showing how to clean yum metadata cache
    - name: Limpiar la meta de yum
      command: "/usr/bin/yum clean metadata"
      args:
        warn: no

    - name: Habilitar postgresql 12
      command: "/usr/bin/dnf module -y enable postgresql:12"
      register: enable_postgresql

   
    - name: Habilitar pki-deps
      command: "/usr/bin/dnf module -y enable pki-deps"
      register: enable_pki_deps
   
#    - name: Distro Sync
#      command: "dnf distro-sync --nobest"
#      register: distro_sync_nobest
   
    - name: Instalar los paquetes
      yum:
        name: "{{ rhvm_add_rpms }}"
        state: present
        update_cache: no

    - name: Configurar rhvm (engine-setup)
      command: "engine-setup --config=/tmp/rhvm_config.conf"
      register: engine_setup
      async: 900
      poll: 10

    - name: Instalacion info
      debug:
      msg: 
        - "Aplicacion desplegada en:"
        - "https://{{ ansible_hostname }}.{{ rhvm_dom_gui}}"
        - "(https://{{ ansible_ssh_host }})"
