---
- name: Get tag from virtual machine
  hosts: all
  #connection: local
  gather_facts: yes
  tasks:
  - name: Traigo TAGs de SDK VMWARE
    vmware_guest_info:
      hostname: '{{ lookup("env", "VMWARE_HOST") }}'
      username: '{{ lookup("env", "VMWARE_USER") }}'
      password: '{{ lookup("env", "VMWARE_PASSWORD") }}'
      datacenter: "DCGLA"
      name: "{{inventory_hostname}}"
      tags: True
      tag_details: True
    delegate_to: localhost
    register: info
    no_log: false

  - name: Exporto variables
    set_fact:
      ambiente: "{{ info.instance.tags | json_query(vambiente)[0] }}"
      proyecto: "{{ info.instance.tags | json_query(vproyecto) }}"
  #  no_log: true
    vars:
      vambiente: "[?category_name=='ambiente'].name"
      vproyecto: "[?category_name=='proyecto'].name"

  - name: Tags
    debug:
        msg:
        - "ambiente {{ ambiente }}"
        - "proyecto {{ proyecto }}"
        
#  - name: Seteamos los tags de ambiente y proyecto para Insight
#    shell: "insights-client --display-name=${HOSTNAME} --group={{ambiente}} --checkin"
#    register: command_result
#    failed_when: command_result.rc != 0 or 'Successfully checked in' not in command_result.stdout
#    changed_when: false
#    when: ansible_facts['os_family'] == "RedHat"
      
#  - name: Agregamos nuestros tags
#    blockinfile:
#      path: /etc/insights-client/tags.yaml
#      block: |
#        proyecto: {{ proyecto }}
#        ambiente: {{ ambiente }}
#      insertbefore: EOF
#    when: ansible_facts['os_family'] == "RedHat"

#  - name: Subimos a Insight
#    shell: "insights-client"
#    register: command_result
#    failed_when: command_result.rc != 0 or 'Successfully uploaded report from' not in command_result.stdout
#    changed_when: false
#    when: ansible_facts['os_family'] == "RedHat"
